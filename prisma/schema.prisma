// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


//! this is where we define our data model

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//user can have many reviews
model User {
  id          Int       @id @default(autoincrement())
  first_name  String
  last_name   String
  city        String
  password    String
  email       String    @unique
  phone       String
  reviews     Review[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Review {
  id          Int       @id @default(autoincrement())
  first_name  String
  last_name   String
  text        String
  rating      Float
  restaurant_id  Int
  restaurant  Restaurant @relation(fields: [restaurant_id], references: [id])
  user_id     Int
  user        User @relation(fields: [user_id], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Restaurant {
  id          Int       @id @default(autoincrement())
  name        String
  main_image  String
  images      String[]
  description String
  open_time   String
  close_time  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  slug        String    @unique
  price       PRICE
  items       Item[]
  location_id Int
  location    Location @relation(fields: [location_id], references: [id])
  cuisine_id  Int
  cuisine     Cuisine @relation(fields: [cuisine_id], references: [id])
  reviews     Review[]
}

model Item {
  id          Int       @id @default(autoincrement())
  name        String
  price       String
  description String
  restaurant_id Int
  restaurant  Restaurant @relation(fields: [restaurant_id], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Location {
  id          Int       @id @default(autoincrement())
  name        String
  restaurants Restaurant[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  }


model Cuisine {
  id          Int       @id @default(autoincrement())
  name        String
  restaurants Restaurant[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


enum PRICE {
  CHEAP
  REGULAR
  EXPENSIVE
}
